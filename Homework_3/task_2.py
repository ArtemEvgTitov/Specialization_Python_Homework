# В большой текстовой строке подсчитать количество встречаемых слов и вернуть 10 самых частых.
# Не учитывать знаки препинания и регистр символов.
# За основу возьмите любую статью из википедии или из документации к языку.

def word_count(user_text):
    user_text.lower()
    signs = '''!()-[]{};:'"\,<>./?@#$%^&*_~'''
    for sing in user_text:
        if sing in signs:
            user_text = user_text.replace(sing, '')
    words_list = user_text.split(' ')
    result = {}
    for word in words_list:
        if word not in result:
            result[f'{word}'] = 1
        else:
            result[f'{word}'] += 1
    return result

def top_10_words(words_dictionary):
    TOP = 10
    sorted_dict = sorted(words_dictionary.items(), key=lambda x: x[1])
    dict(sorted_dict)
    print('ТОП 10 слов:')
    id = -1
    while id >= -TOP:
        print(f'Слово "{sorted_dict[id][0]}" встречается {sorted_dict[id][1]} раз')
        id -= 1


text = 'Язык Python был создан сотрудником голландского института CWI Гвидо ван Россумом в 1991 году. ' \
       'Некоторые концепции для Python были взяты от языка программирования ABC ' \
       '(Гвидо участвовал в разработке этого языка, ориентированного на обучение программированию). ' \
       'Часто упоминается, что ABC является предшественником языка Python. ' \
       'За выбором названия Python также стоит интересный факт. ' \
       'Гвидо ван Россум был поклонником популярного в то время комедийного шоу BBC «Летающий цирк Монти Пайтона». ' \
       'Поэтому он решил взять название Python для создаваемого языка программирования. ' \
       'Python имеет обширное сообщество по всему миру и выпускает новые версии языка довольно часто. ' \
       'Преимущества Python. ' \
       'Открытый исходный код и бесплатное использование. ' \
       'Все релизы Python доступны бесплатно. ' \
       'Python можно даже модифицировать и распространять бесплатно. ' \
       'Это значительно снижает затраты на разработку. ' \
       'Легко учить. В Python мало ключевых слов, простая структура и четко определенный синтаксис. ' \
       'Это позволяет быстро учить язык. ' \
       'Легко читать. Код Python прост и лаконичен, ' \
       'что делает его более читабельным за код других языков программирования. ' \
       'Легко поддерживать. Исходный код Python довольно прост в обслуживании. ' \
       'Большая стандартная библиотека. ' \
       'Большая часть библиотеки Python портируемая и кроссплатформенна, совместима с Unix, Windows и macOS. ' \
       'Интерактивный режим. Python поддерживает интерактивный режим, ' \
       'который позволяет интерактивно тестировать и отлаживать фрагменты кода. ' \
       'Портируемость. ' \
       'Python может работать на самых разных аппаратных платформах и ' \
       'имеет одинаковый интерфейс на всех платформах. ' \
       'Расширяемость. ' \
       'Вы можете добавлять низкоуровневые модули в интерпретатор Python. ' \
       'Эти модули позволяют программистам добавлять или настраивать свои инструменты для повышения эффективности. ' \
       'GUI-программирование. ' \
       'Python поддерживает приложения с графическим интерфейсом, ' \
       'которые можно создавать и переносить во многие системные вызовы, библиотеки и оконные системы, ' \
       'такие как Windows MFC, Macintosh и X Window System в Unix. ' \
       'Универсальность. Python — это гибкий язык общего назначения, ' \
       'который полностью поддерживает как процедурное, так и объектно-ориентированное программирование. ' \
       'Благодаря встроенным и сторонним пакетам подходит для выполнения широкого спектра задач. ' \
       'Эффективность для быстрой разработки. ' \
       'Поскольку Python прост в использовании и не требует компиляции, ' \
       'разработка программ занимает меньше времени. ' \
       'Программы на Python обычно намного короче, чем аналогичные программы на других языках. ' \
       'Это отличный выбор для быстрого создания прототипов в среде быстрой разработки программного обеспечения. ' \
       'Автоматическое выделение памяти. ' \
       'Python не имеет указателей, и разработчикам не нужно выделять свободное место в памяти. ' \
       'Python автоматически выделяет память, а сборщик мусора «перерабатывает» память из отброшенных объектов. ' \
       'Это означает, что разработчикам не нужно беспокоиться об утечках памяти, ' \
       'некорректных ссылках и указателей или размере каждого объекта. ' \
       'Доступность сторонних библиотек. В дополнение к обширной встроенной (стандартной) библиотеке.' \
       'Python разработчики имеют доступ ко многим бесплатным внешним библиотекам. ' \
       'Эти сторонние библиотеки легко импортировать и устанавливать с помощью репозитория PyPI ' \
       'Также разработчики могут публиковать свои собственные пакеты.' \
       'Обширное сообщество и большая популярность. ' \
       'Python является одним из самых популярных языков программирования. ' \
       'Он имеет большое и активное сообщество пользователей. ' \
       'Легко находить учебные материалы и другие ресурсы, ' \
       'задавать вопросы, искать работу.'

word_count_dictionary = word_count(text)
top_10_words(word_count_dictionary)